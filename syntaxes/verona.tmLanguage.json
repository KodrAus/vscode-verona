{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Verona",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#use"
    },
    {
      "include": "#class"
    },
    {
      "include": "#typedef"
    },
    {
      "include": "#field"
    },
    {
      "include": "#function"
    },
    {
      "include": "#block"
    },
    {
      "include": "keyword"
    }
  ],
  "repository": {
    "keyword": {
      "patterns": [
        {
          "match": "\\bcown\\b",
          "name": "keyword.other.cown.verona"
        },
        {
          "match": "\\buse\\b",
          "name": "keyword.other.use.verona"
        },
        {
          "match": "\\bbuiltin\\b",
          "name": "keyword.other.builtin.verona"
        },
        {
          "match": "\\bself\\b",
          "name": "keyword.other.self.verona"
        },
        {
          "match": "\\bmut-view\\b",
          "name": "keyword.other.mutview.verona"
        },
        {
          "match": "\\bclass\\b",
          "name": "keyword.other.class.verona"
        },
        {
          "match": "\\bprimitive\\b",
          "name": "keyword.other.primitive.verona"
        },
        {
          "match": "\\binterface\\b",
          "name": "keyword.other.interface.verona"
        },
        {
          "match": "\\bvar\\b",
          "name": "keyword.other.var.verona"
        },
        {
          "match": "\\blet\\b",
          "name": "keyword.other.let.verona"
        },
        {
          "match": "\\bnew\\b",
          "name": "keyword.operator.new.verona"
        },
        {
          "match": "\\bfinal\\b",
          "name": "keyword.other.final.verona"
        },
        {
          "match": "\\bwhere\\b",
          "name": "keyword.control.where.verona"
        },
        {
          "match": "\\bin\\b",
          "name": "keyword.control.in.verona"
        },
        {
          "match": "\\bfrom\\b",
          "name": "keyword.control.from.verona"
        },
        {
          "match": "\\breturn\\b",
          "name": "keyword.control.return.verona"
        },
        {
          "match": "\\bwhen\\b",
          "name": "keyword.control.when.verona"
        },
        {
          "match": "\\bmatch\\b",
          "name": "keyword.control.match.verona"
        },
        {
          "match": "\\bif\\b",
          "name": "keyword.control.if.verona"
        },
        {
          "match": "\\belse\\b",
          "name": "keyword.control.else.verona"
        },
        {
          "match": "\\bwhile\\b",
          "name": "keyword.control.while.verona"
        },
        {
          "match": "\\bfor\\b",
          "name": "keyword.control.for.verona"
        },
        {
          "match": "\\bin\\b",
          "name": "keyword.control.in.verona"
        },
        {
          "match": "\\bcontinue\\b",
          "name": "keyword.control.continue.verona"
        },
        {
          "match": "\\bbreak\\b",
          "name": "keyword.control.break.verona"
        },
        {
          "match": "\\byield\\b",
          "name": "keyword.control.yield.verona"
        }
      ]
    },
    "mutability": {
      "match": "\\b(imm|mut|iso)\\b",
      "captures": {
        "1": {
          "name": "keyword.other.mutability.verona"
        }
      }
    },
    "use": {
      "begin": "(?=\\buse\\b)",
      "end": "(?<=\")",
      "patterns": [
        {
          "include": "#string"
        },
        {
          "include": "#keyword"
        }
      ]
    },
    "class": {
      "begin": "(?=\\b(?:class|primitive|interface)\\b)",
      "end": "(?<=\\})",
      "patterns": [
        {
          "begin": "(?=[_[:alnum:]])",
          "end": "(?=\\{)",
          "patterns": [
            {
              "include": "#generics"
            },
            {
              "include": "#keyword"
            },
            {
              "match": "[_[:alpha:]][_[:alnum:]]*",
              "name": "entity.name.type.verona"
            }
          ]
        },
        {
          "include": "#object-block"
        }
      ]
    },
    "typedef": {
      "begin": "\\b(?:type)\\b",
      "end": "(?<=;)",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "include": "#type"
        }
      ]
    },
    "function": {
      "begin": "(?=(?:\\b[_[:alpha:]][_[:alnum:]]*\\b\\s*[\\(\\[])|[\\(\\[])",
      "end": "(?<=;)|(?=\\{)",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.function.verona"
        },
        {
          "include": "#generics"
        },
        {
          "begin": "\\(",
          "end": "(?<=;)|(?=\\{)",
          "patterns": [
            {
              "include": "#keyword"
            },
            {
              "include": "#arg"
            },
            {
              "include": "#type"
            },
            
            {
              "include": "#where"
            }
          ]
        }
      ]
    },
    "where": {
      "begin": "(?=\\bwhere\\b)",
      "end": "(?=[;\\{])",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "begin": ":",
          "end": "(?=[;,\\{]|where)",
          "patterns": [
            {
              "include": "#type"
            }
          ]
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*\\s*(?=:)",
          "name": "entity.name.type.verona"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.variable.verona"
        }
      ]
    },
    "arg": {
      "begin": "(?=\\b[_[:alpha:]][_[:alnum:]]*\\b\\s*[,:\\)])",
      "end": "(?=[,\\)])",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.variable.argument.verona"
        },
        {
          "begin": ":",
          "end": "(?=[,\\)])",
          "patterns": [
            {
              "include": "#type"
            }
          ]
        }
      ]
    },
    "field": {
      "begin": "(?=\\b[_[:alpha:]][_[:alnum:]]*\\b\\s*:)",
      "end": "(?<=;)",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.variable.field.verona"
        },
        {
          "begin": ":",
          "end": ";|(?=\\=)",
          "patterns": [
            {
              "include": "#type"
            }
          ]
        },
        {
          "begin": "\\=",
          "end": ";",
          "patterns": [
            {
              "include": "#expr"
            }
          ]
        }
      ]
    },
    "object-block": {
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#class"
        },
        {
          "include": "#typedef"
        },
        {
          "include": "#function"
        },
        {
          "include": "#field"
        },
        {
          "include": "#block"
        },
        {
          "include": "#keyword"
        }
      ]
    },
    "block": {
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#expr"
        }
      ]
    },
    "expr": {
      "patterns": [
        {
          "include": "#comment"
        },
        {
          "include": "#string"
        },
        {
          "include": "#number"
        },
        {
          "include": "#boolean"
        },
        {
          "include": "#new"
        },
        {
          "include": "#assignment"
        },
        {
          "include": "#keyword"
        },
        {
          "include": "#call"
        },
        {
          "include": "#access"
        },
        {
          "include": "#generics"
        },
        {
          "include": "#identifier"
        },
        {
          "include": "#block"
        }
      ]
    },
    "assignment": {
      "begin": "(?=\\b(?:var|let)\\b\\s+)",
      "end": "(?<=[\\=;])|(?=[,\\}\\)])",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.variable.verona"
        },
        {
          "begin": ":",
          "end": "[;\\=]",
          "patterns": [
            {
              "include": "#type"
            }
          ]
        }
      ]
    },
    "access": {
      "match": "\\.\\s*\\b([_[:alpha:]][_[:alnum:]]*)\\b",
      "captures": {
        "1": {
          "name": "entity.name.variable.field.verona"
        }
      }
    },
    "call": {
      "match": "(?:\\.\\s*)?\\b([_[:alpha:]][_[:alnum:]]*)\\b\\s*(?=[\\[\\(])",
      "captures": {
        "1": {
          "name": "entity.name.function.verona"
        }
      }
    },
    "new": {
      "begin": "(?=\\b(?:new)\\b\\s+)",
      "end": "(?<=;)|(?=[,\\}\\)])",
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "include": "#type"
        },
        {
          "include": "#object-block"
        }
      ]
    },
    "identifier": {
      "match": "\\b(?:[_[:alpha:]][_[:alnum:]]*)\\b",
      "name": "entity.name.variable.verona"
    },
    "type": {
      "patterns": [
        {
          "include": "#keyword"
        },
        {
          "include": "#mutability"
        },
        {
          "include": "#generics"
        },
        {
          "match": "[_[:alpha:]][_[:alnum:]]*",
          "name": "entity.name.type.verona"
        }
      ]
    },
    "generics": {
      "begin": "(?=\\[)",
      "end": "(?<=\\])",
      "patterns": [
        {
          "begin": "\\[",
          "end": "\\]",
          "patterns": [
            {
              "begin": "(?=\\b(?:(?:class|type)\\s+)?[_[:alpha:]][_[:alnum:]]*\\b)",
              "end": "(?=[,\\]])",
              "patterns": [
                {
                  "include": "#keyword"
                },
                {
                  "match": "[_[:alpha:]][_[:alnum:]]*",
                  "name": "entity.name.type.generic.verona"
                },
                {
                  "include": "#generics"
                }
              ]
            }
          ]
        }
      ]
    },
    "string": {
      "name": "string.quoted.double.verona",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.verona",
          "match": "\\\\."
        }
      ]
    },
    "number": {
      "match": "\\b(?:-)?\\d([\\._\\-abcdefxABCDEFX[:digit:]])*\\b",
      "name": "constant.numeric.verona"
    },
    "boolean": {
      "match": "\\b(?:true|false)\\b",
      "name": "constant.language.boolean.verona"
    },
    "comment": {
      "patterns": [
        {
          "name": "comment.block.verona",
          "begin": "/\\*",
          "end": "\\*/"
        },
        {
          "name": "comment.inline.verona",
          "begin": "//",
          "end": "$"
        }
      ]
    }
  },
  "scopeName": "source.verona"
}
